'''
–ë–æ–ª—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ, 
–±–æ–ª—å—à–∏—Ö —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º 
—ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã (—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞) –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ n —á–∏—Å–µ–ª ‚Äì –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –±–æ–ª—å—à–∏—Ö —Å—Ä–µ–¥–Ω–µ–≥–æ 
–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.

–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢

Sample Input 1:
4
1 2 3 4
5 6 3 15
0 2 3 1
5 2 8 5

Sample Output 1:
2
1
2
1

Sample Input 2:
2
5 6
99 5

Sample Output 2:
1
1

Sample Input 3:
3
666 666 666
777 777 777
100 100 100

Sample Output 3:
0
0
0
'''

def matrix():
    n = int(input())
    matrix = []
    for i in range(n):
        row = [int(num) for num in input().split()]
        matrix.append(row)
    return matrix

def average_row(row):
    sum_row = 0
    count = 0
    for num in row:
        sum_row += num
        count += 1
    average = sum_row / count
    return average

def count_greater_than_average(row):
    average = average_row(row)
    count = 0
    for num in row:
        if num > average:
            count += 1
    return count

# –°–æ–∑–¥–∞–µ–º –º–∞—Ç—Ä–∏—Ü—É
matrix_data = matrix()

# –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ, –±–æ–ª—å—à–∏—Ö —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ
for row in matrix_data:
    average_value = average_row(row)
    greater_count = count_greater_than_average(row)
    print(greater_count)

